syntax = "proto3";

// Specifies the namespace for the generated C# classes.
option csharp_namespace = "gPRC_API";

// Defines the package for the service.
package greet;

// Defines the toDoService with various RPC methods.
service toDoService{

    // RPC method to create a new toDo.
    rpc createToDo (createToDoRequest) returns (createToDoResponse){};

    // RPC method to read a single toDo.
    rpc readToDo (readToDoRequest) returns (readToDosResponse){};

    // RPC method to read a list of toDos.
    rpc readToDos (GetAllRequest) returns (GetAllResponse){};

    // RPC method to update a toDo.
    rpc updateToDo (updateToDoRequest) returns (updateToDoResponse){};

    // RPC method to delete a toDo.
    rpc deleteToDo (deleteToDoRequest) returns (deleteToDoResponse){};
}

// Message to create a new toDo.
message createToDoRequest{
    string title = 1; // Title of the toDo.
    string description = 2; // Description of the toDo.
}

// Response message after creating a toDo.
message createToDoResponse{
    int32 id = 1; // ID of the created toDo.
}

// Message to read a single toDo.
message readToDoRequest{
    int32 id = 1; // ID of the toDo to be read.
}

// Response message for a list of toDos.
message readToDosResponse{
    int32 id = 1; // ID of the toDo.
    string title = 2; // Title of the toDo.
    string description = 3; // Description of the toDo.
    string status = 4; // Status of the toDo.
}

// Request message to get all toDos.
message GetAllRequest {}

// Response message for all toDos.
message GetAllResponse{
    repeated readToDosResponse toDos = 1; // List of toDos.
}

// Message to update a single toDo.
message updateToDoRequest{
    int32 id = 1; // ID of the toDo to be updated.
    string title = 2; // New title for the toDo.
    string description = 3; // New description for the toDo.
    string status = 4; // New status for the toDo.
}   

// Response message after updating a toDo.
message updateToDoResponse{
    int32 id = 1; // ID of the updated toDo.
    string title = 2; // Updated title of the toDo.
    string description = 3; // Updated description of the toDo.
    string status = 4; // Updated status of the toDo.
}

// Message to delete a single toDo.
message deleteToDoRequest{
    int32 id = 1; // ID of the toDo to be deleted.
}

// Response message after deleting a toDo.
message deleteToDoResponse{
    int32 id = 1; // ID of the deleted toDo.
}
